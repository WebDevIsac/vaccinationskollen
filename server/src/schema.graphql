scalar DateTime

type Query {
	getUser: User
	getVaccinations: [Vaccination]
	getUserVaccinations: [UserVaccination]
}

type Vacc {
	vaccination: Vaccination
	userVaccination: UserVaccination
}

type Mutation {
    signup(name: String!, email: String!, password: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
	addUserVaccination(vaccinationId: ID!, takenAt: String): UserVaccination
}

type User {
    id: ID!
    name: String!
    email: String!
	vaccinations: [UserVaccination]
}

type AuthPayload {
    token: String
    user: User
}

type Vaccination {
	id: ID!
	name: String!
	dose: Int
	url: String!
	untilNext: String
	protectDuration: String
}

type UserVaccination {
	id: ID!
	user: User!
	type: Vaccination!
	createdAt: DateTime!
	takenAt: String
	untilNext: String
	protectDuration: String
}